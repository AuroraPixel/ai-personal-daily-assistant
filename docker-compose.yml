version: '3.8'

services:
  # 主应用服务
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      # OpenAI 配置
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_CHAT_MODEL=${OPENAI_CHAT_MODEL:-gpt-3.5-turbo}
      - OPENAI_EMBEDDING_MODEL=${OPENAI_EMBEDDING_MODEL:-text-embedding-ada-002}
      
      # 新闻API配置
      - NEWS_API_TOKEN=${NEWS_API_TOKEN}
      
      # 数据库配置
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USERNAME=${DB_USERNAME:-root}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - DB_DATABASE=${DB_DATABASE:-ai_assistant}
      - DB_CHARSET=${DB_CHARSET:-utf8mb4}
      
      # ChromaDB配置
      - CHROMA_CLIENT_MODE=${CHROMA_CLIENT_MODE:-http}
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8001
    depends_on:
      mysql:
        condition: service_healthy
      chromadb:
        condition: service_started
    volumes:
      - app_data:/app/data
      - app_logs:/app/logs
    restart: unless-stopped
    networks:
      - ai-assistant-network

  # MySQL 数据库
  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD:-password}
      - MYSQL_DATABASE=${DB_DATABASE:-ai_assistant}
      - MYSQL_USER=${DB_USERNAME:-root}
      - MYSQL_PASSWORD=${DB_PASSWORD:-password}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - ai-assistant-network

  # ChromaDB 向量数据库
  chromadb:
    image: chromadb/chroma:latest
    ports:
      - "8001:8000"
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_PORT=8000
      - CHROMA_SERVER_CORS_ALLOW_ORIGINS=["*"]
    volumes:
      - chroma_data:/chroma/chroma
    restart: unless-stopped
    networks:
      - ai-assistant-network

  # Nginx 反向代理（可选，用于生产环境）
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - ai-assistant-network

volumes:
  mysql_data:
  chroma_data:
  app_data:
  app_logs:
  nginx_logs:

networks:
  ai-assistant-network:
    driver: bridge 